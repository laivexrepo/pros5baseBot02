15
{"last_modification_time":1616146454,"language":2,"import_file":"/Users/willem/CWUbots/pros5baseBot01/src/main.cpp","args":["clang++","-working-directory=/Users/willem/CWUbots/pros5baseBot01","--driver-mode=g++","-target","armv7ar-none-none-eabi","-isystem/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/include/c++/9.3.1","-isystem/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp","-isystem/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/include/c++/9.3.1/backward","-isystem/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/include","-isystem/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/include-fixed","-isystem/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/include","-iquote./include","-iquote./include/./","-mcpu=cortex-a9","-mfpu=neon-fp16","-mfloat-abi=softfp","-Os","-g","-D_POSIX_THREADS","-D_UNIX98_THREAD_MUTEX_ATTRIBUTES","-Wno-psabi","-ffunction-sections","-fdata-sections","-fdiagnostics-color","-funwind-tables","--std=gnu++17","/Users/willem/CWUbots/pros5baseBot01/src/main.cpp","-resource-dir=/usr/local/Cellar/llvm/9.0.0/lib/clang/9.0.0","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/local/include","-isystem/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1","-isystem/Library/Developer/CommandLineTools/usr/lib/clang/12.0.0/include","-isystem/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include","-isystem/Library/Developer/CommandLineTools/usr/include","-iframework/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks"],"includes":[{"line":20,"resolved_path":"/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cstdint"},{"line":21,"resolved_path":"/Users/willem/CWUbots/pros5baseBot01/include/pros/imu.h"}],"dependencies":["/Users/willem/CWUbots/pros5baseBot01/src/main.cpp","/Users/willem/CWUbots/pros5baseBot01/include/main.h","/Users/willem/CWUbots/pros5baseBot01/include/api.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cerrno","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/c++config.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/errno.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/errno.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/reent.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/_ansi.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/newlib.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/config.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/features.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_types.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/_types.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/lock.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cmath","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/ext/type_traits.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/math.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/cdefs.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/std_abs.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/stdlib.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/alloca.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/specfun.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/functexcept.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/ext/numeric_traits.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_pair.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/move.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/concept_check.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/type_traits","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_types.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/ptr_traits.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/debug/debug.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/limits","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/gamma.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/bessel_function.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/exp_integral.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/legendre_function.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/modified_bessel_func.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/riemann_zeta.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cstdbool","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cstddef","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cstdint","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stdint.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/stdint.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_intsup.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cstdio","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/stdio.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/types.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/endian.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/select.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_timeval.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/timespec.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_timespec.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_pthreadtypes.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/sched.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/stdio.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cstdlib","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/iostream","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/ostream","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/ios","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/iosfwd","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stringfwd.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/memoryfwd.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/postypes.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cwchar","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/wchar.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_locale.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/exception","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/exception.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/exception_ptr.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/cxxabi_init_exception.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/typeinfo","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/hash_bytes.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/new","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/nested_exception.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/localefwd.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/c++locale.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/clocale","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/locale.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cctype","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/ctype.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/ios_base.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/ext/atomicity.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/gthr.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/locale_classes.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/string","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/allocator.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/c++allocator.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/ostream_insert.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_function.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/range_access.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/initializer_list","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/string_view","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/functional_hash.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/system_error","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/error_constants.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/stdexcept","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/streambuf","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/basic_ios.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/locale_facets.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/cwctype","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/wctype.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/streambuf_iterator.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/ostream.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/istream","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/istream.tcc","/Users/willem/CWUbots/pros5baseBot01/include/pros/adi.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/distance.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/ext_adi.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/imu.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/llemu.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lvgl.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_log.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_conf.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_task.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_mem.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_ll.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_hal/lv_hal.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_hal/lv_hal_disp.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_color.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_area.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/string.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/strings.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_hal/lv_hal_indev.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_core/lv_obj.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_core/lv_style.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_font.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_symbol_def.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_fonts/lv_font_builtin.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_anim.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_hal/lv_hal_tick.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_core/lv_group.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_core/lv_lang.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_core/lv_vdb.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_core/lv_refr.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_themes/lv_theme.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_themes/lv_theme_templ.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_themes/lv_theme_default.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_themes/lv_theme_alien.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_themes/lv_theme_night.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_themes/lv_theme_zen.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_themes/lv_theme_mono.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_themes/lv_theme_nemo.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_themes/lv_theme_material.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_btn.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_cont.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_core/lv_indev.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_imgbtn.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_draw/lv_draw_img.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_draw/lv_draw.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_txt.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_draw/lv_draw_rect.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_draw/lv_draw_label.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_draw/lv_draw_triangle.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_img.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_misc/lv_fs.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_label.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_line.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_page.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_list.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_chart.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_table.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_cb.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_bar.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_slider.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_led.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_btnm.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_kb.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_ddlist.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_roller.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_ta.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_canvas.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_win.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_tabview.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_tileview.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_mbox.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_gauge.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_lmeter.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_sw.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_arc.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_preload.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_calendar.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_objx/lv_spinbox.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/misc.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/motors.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/optical.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/rtos.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/rotation.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/vision.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/adi.hpp","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tuple","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/utility","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/array","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/uses_allocator.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/invoke.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/distance.hpp","/Users/willem/CWUbots/pros5baseBot01/include/pros/llemu.hpp","/Users/willem/CWUbots/pros5baseBot01/include/pros/misc.hpp","/Users/willem/CWUbots/pros5baseBot01/include/pros/motors.hpp","/Users/willem/CWUbots/pros5baseBot01/include/pros/optical.hpp","/Users/willem/CWUbots/pros5baseBot01/include/pros/rotation.hpp","/Users/willem/CWUbots/pros5baseBot01/include/pros/rtos.hpp","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/functional","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/refwrap.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/std_function.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/unordered_map","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/ext/aligned_buffer.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/hashtable.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/hashtable_policy.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/node_handle.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/optional","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/vector","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_bvector.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_algo.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/algorithmfwd.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_heap.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_tempbuf.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/uniform_int_dist.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/memory","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/ext/concurrence.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/unique_ptr.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/shared_ptr.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/shared_ptr_base.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/allocated_ptr.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/shared_ptr_atomic.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/atomic_base.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/backward/auto_ptr.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/pstl/glue_memory_defs.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/pstl/execution_defs.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/vision.hpp","/Users/willem/CWUbots/pros5baseBot01/include/globals.hpp","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/predefined_ops.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/special_function_util.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/beta_function.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/ell_integral.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/hypergeometric.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/poly_hermite.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/tr1/poly_laguerre.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stdarg.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_sigset.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/gthr-default.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/atomic_word.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/cxxabi_forced.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/backward/binders.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/string_view.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/locale_classes.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/streambuf.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/ctype_base.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/ctype_inline.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/locale_facets.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/basic_ios.tcc","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_draw/lv_draw_line.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_relops.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/enable_special_members.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/unordered_map.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/erase_if.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/stl_raw_storage_iter.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/os_defines.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v7-a+simd/softfp/bits/cpu_defines.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/pstl/pstl_config.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/_newlib_version.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/ieeefp.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/stdlib.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/exception_defines.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/debug/assertions.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stdbool.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/_endian.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/types.h","/Users/willem/CWUbots/pros5baseBot01/include/pros/colors.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_version.h","/Users/willem/CWUbots/pros5baseBot01/include/display/lv_conf_checker.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/c++/9.3.1/bits/atomic_lockfree_defines.h","/Users/willem/CWUbots/pros5baseBot01/include/portdef.hpp"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":15333955921748837064,"detailed_name":"pros","short_name_offset":0,"short_name_size":4,"kind":3,"hover":"","comments":"","declarations":[],"spell":"24:11-24:15|-1|1|2","extent":"24:1-447:2|-1|1|0","bases":[1],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["24:11-24:15|-1|1|4","123:10-123:14|2|2|4","139:10-139:14|2|2|4","197:10-197:14|2|2|4","408:39-408:43|2|2|4","423:10-423:14|2|2|4","438:10-438:14|2|2|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":17144725055177610035,"detailed_name":"pros::Imu","short_name_offset":6,"short_name_size":3,"kind":5,"hover":"","comments":"","declarations":["29:2-29:5|-1|1|4"],"spell":"25:7-25:10|0|2|2","extent":"25:1-446:2|0|2|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"vars":[0],"instances":[],"uses":["29:2-29:5|2|2|4"]},{"id":3,"usr":12339929197612516034,"detailed_name":"uint8_t","short_name_offset":0,"short_name_size":7,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1],"uses":["26:13-26:20|-1|1|4","29:17-29:24|-1|1|4"]},{"id":4,"usr":5401847601697785946,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["26:8-26:11|2|2|4","29:12-29:15|2|2|4","45:10-45:13|2|2|4","68:10-68:13|2|2|4","68:37-68:40|2|2|4","212:10-212:13|2|2|4","227:10-227:13|2|2|4","242:10-242:13|2|2|4","257:10-257:13|2|2|4","272:10-272:13|2|2|4","287:10-287:13|2|2|4","302:10-302:13|2|2|4","320:10-320:13|2|2|4","337:10-337:13|2|2|4","355:10-355:13|2|2|4","372:10-372:13|2|2|4","390:10-390:13|2|2|4","408:10-408:13|2|2|4"]},{"id":5,"usr":11353837028888530222,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["45:15-45:22|-1|1|4","68:15-68:22|-1|1|4","212:15-212:22|-1|1|4","227:15-227:22|-1|1|4","242:15-242:22|-1|1|4","257:15-257:22|-1|1|4","272:15-272:22|-1|1|4","287:15-287:22|-1|1|4","302:15-302:22|-1|1|4","320:15-320:22|-1|1|4","337:15-337:22|-1|1|4","355:15-355:22|-1|1|4","372:15-372:22|-1|1|4","390:15-390:22|-1|1|4","408:15-408:22|-1|1|4"]},{"id":6,"usr":16199156163178427820,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["68:42-68:50|-1|1|4"]},{"id":7,"usr":2623780340455390017,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["123:19-123:33|-1|1|4"]},{"id":8,"usr":8345230848373571968,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["123:16-123:17|2|2|4","139:16-139:17|2|2|4","197:16-197:17|2|2|4","408:45-408:46|2|2|4","423:16-423:17|2|2|4","438:16-438:17|2|2|4"]},{"id":9,"usr":17898658625613939001,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["139:19-139:28|-1|1|4","408:48-408:57|-1|1|4"]},{"id":10,"usr":17928222086894636507,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["197:19-197:31|-1|1|4"]},{"id":11,"usr":12265777873910935966,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["423:19-423:32|-1|1|4"]},{"id":12,"usr":4364423012903003746,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["438:19-438:33|-1|1|4"]}],"funcs":[{"id":0,"usr":2569339172384686335,"detailed_name":"pros::Imu::Imu(const std::uint8_t port)","short_name_offset":6,"short_name_size":3,"kind":9,"storage":1,"hover":"","comments":"","declarations":[],"spell":"29:2-29:5|2|2|2","extent":"29:2-29:46|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[1],"uses":[],"callees":[]},{"id":1,"usr":17995919861869906601,"detailed_name":"virtual std::int32_t pros::Imu::reset() const","short_name_offset":32,"short_name_size":5,"kind":6,"storage":1,"hover":"","comments":"\nCalibrate IMU\n\nThis takes approximately 2 seconds, and is a non-blocking operation.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is already calibrating\n\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"45:23-45:28|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":13540472253768782021,"detailed_name":"virtual std::int32_t pros::Imu::set_data_rate(std::uint32_t rate) const","short_name_offset":32,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nSet the Inertial Sensor's refresh interval in milliseconds.\n\nThe rate may be specified in increments of 5ms, and will be rounded down to\nthe nearest increment. The minimum allowable refresh rate is 5ms. The default\nrate is 10ms.\n\nAs values are copied into the shared memory buffer only at 10ms intervals,\nsetting this value to less than 10ms does not mean that you can poll the\nsensor's values any faster. However, it will guarantee that the data is as\nrecent as possible.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param rate The data refresh interval in milliseconds\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"68:23-68:36|2|2|1","param_spellings":["68:51-68:55"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":11385179410010075633,"detailed_name":"virtual double pros::Imu::get_rotation() const","short_name_offset":26,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\nGet the total number of degrees the Inertial Sensor has spun about the z-axis\n\nThis value is theoretically unbounded. Clockwise rotations are represented\nwith positive degree values, while counterclockwise rotations are represented\nwith negative ones.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return The degree value or PROS_ERR_F if the operation failed, setting\nerrno.","declarations":[{"spell":"87:17-87:29|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":10923712291654015597,"detailed_name":"virtual double pros::Imu::get_heading() const","short_name_offset":26,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nGet the Inertial Sensor's heading relative to the initial direction of its\nx-axis\n\nThis value is bounded by [0,360). Clockwise rotations are represented with\npositive degree values, while counterclockwise rotations are represented with\nnegative ones.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return The degree value or PROS_ERR_F if the operation failed, setting\nerrno.","declarations":[{"spell":"107:17-107:28|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":8795275968939924978,"detailed_name":"virtual pros::c::quaternion_s_t pros::Imu::get_quaternion() const","short_name_offset":43,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\nGet a quaternion representing the Inertial Sensor's orientation\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return The quaternion representing the sensor's orientation. If the\noperation failed, all the quaternion's members are filled with PROS_ERR_F and\nerrno is set.","declarations":[{"spell":"123:34-123:48|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":7499907880031015728,"detailed_name":"virtual pros::c::euler_s_t pros::Imu::get_euler() const","short_name_offset":38,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\nGet the Euler angles representing the Inertial Sensor's orientation\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return The Euler angles representing the sensor's orientation. If the\noperation failed, all the structure's members are filled with PROS_ERR_F and\nerrno is set.","declarations":[{"spell":"139:29-139:38|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":5719225377730179410,"detailed_name":"virtual double pros::Imu::get_pitch() const","short_name_offset":26,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\nGet the Inertial Sensor's pitch angle bounded by (-180,180)\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return The pitch angle, or PROS_ERR_F if the operation failed, setting\nerrno.","declarations":[{"spell":"154:17-154:26|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":12618092454828456445,"detailed_name":"virtual double pros::Imu::get_roll() const","short_name_offset":26,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\nGet the Inertial Sensor's roll angle bounded by (-180,180)\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return The roll angle, or PROS_ERR_F if the operation failed, setting errno.","declarations":[{"spell":"168:17-168:25|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":7566344810587688580,"detailed_name":"virtual double pros::Imu::get_yaw() const","short_name_offset":26,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"\nGet the Inertial Sensor's yaw angle bounded by (-180,180)\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return The yaw angle, or PROS_ERR_F if the operation failed, setting errno.","declarations":[{"spell":"182:17-182:24|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":11741504577479350666,"detailed_name":"virtual pros::c::imu_gyro_s_t pros::Imu::get_gyro_rate() const","short_name_offset":41,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nGet the Inertial Sensor's raw gyroscope values\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return The raw gyroscope values. If the operation failed, all the\nstructure's members are filled with PROS_ERR_F and errno is set.","declarations":[{"spell":"197:32-197:45|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":15242773601504193155,"detailed_name":"virtual std::int32_t pros::Imu::tare_rotation() const","short_name_offset":32,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\nResets the current reading of the Inertial Sensor's rotation to zero\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"212:23-212:36|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":12,"usr":14278089635736053423,"detailed_name":"virtual std::int32_t pros::Imu::tare_heading() const","short_name_offset":32,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\nResets the current reading of the Inertial Sensor's heading to zero\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"227:23-227:35|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":150596997329355916,"detailed_name":"virtual std::int32_t pros::Imu::tare_pitch() const","short_name_offset":32,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\nResets the current reading of the Inertial Sensor's pitch to zero\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"242:23-242:33|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":1220728984288136964,"detailed_name":"virtual std::int32_t pros::Imu::tare_yaw() const","short_name_offset":32,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\nResets the current reading of the Inertial Sensor's yaw to zero\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"257:23-257:31|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":13915555065353839462,"detailed_name":"virtual std::int32_t pros::Imu::tare_roll() const","short_name_offset":32,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\nResets the current reading of the Inertial Sensor's roll to zero\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"272:23-272:32|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":14590885390420881153,"detailed_name":"virtual std::int32_t pros::Imu::tare() const","short_name_offset":32,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\nResets all 5 values of the Inertial Sensor to 0.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"287:23-287:27|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":12056957599538770269,"detailed_name":"virtual std::int32_t pros::Imu::tare_euler() const","short_name_offset":32,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\nReset all 3 euler values of the Inertial Sensor to 0.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"302:23-302:33|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":18,"usr":10907313126776577482,"detailed_name":"virtual std::int32_t pros::Imu::set_heading(const double target) const","short_name_offset":32,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\nSets the current reading of the Inertial Sensor's heading to target value\nTarget will default to 360 if above 360 and default to 0 if below 0.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\param  target\n\t\t\t\t Target value for the heading value to be set to\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"320:23-320:34|2|2|1","param_spellings":["320:48-320:54"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":1750923403006547081,"detailed_name":"virtual std::int32_t pros::Imu::set_rotation(const double target) const","short_name_offset":32,"short_name_size":12,"kind":6,"storage":1,"hover":"","comments":"\nSets the current reading of the Inertial Sensor's rotation to target value\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\param  target\n\t\t\t\t Target value for the rotation value to be set to\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"337:23-337:35|2|2|1","param_spellings":["337:49-337:55"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":13002839278157539398,"detailed_name":"virtual std::int32_t pros::Imu::set_yaw(const double target) const","short_name_offset":32,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"\nSets the current reading of the Inertial Sensor's yaw to target value\nWill default to +/- 180 if target exceeds +/- 180.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\param  target\n\t\t\t\t Target value for yaw value to be set to\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"355:23-355:30|2|2|1","param_spellings":["355:44-355:50"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":7083401657839921874,"detailed_name":"virtual std::int32_t pros::Imu::set_pitch(const double target) const","short_name_offset":32,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\nSets the current reading of the Inertial Sensor's pitch to target value\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\param  target\n\t\t\t\t Target value for the pitch value to be set to\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"372:23-372:32|2|2|1","param_spellings":["372:46-372:52"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":22,"usr":15243307920759644598,"detailed_name":"virtual std::int32_t pros::Imu::set_roll(const double target) const","short_name_offset":32,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\nSets the current reading of the Inertial Sensor's roll to target value\nWill default to +/- 180 if target exceeds +/- 180.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\param  target\n\t\t\t\t Target euler values for the euler values to be set to\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"390:23-390:31|2|2|1","param_spellings":["390:45-390:51"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":1459885724959988556,"detailed_name":"virtual std::int32_t pros::Imu::set_euler(const pros::c::euler_s_t target) const","short_name_offset":32,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\nSets the current reading of the Inertial Sensor's euler values to\ntarget euler values. Will default to +/- 180 if target exceeds +/- 180.\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\param  target\n\t\t\t\t Target euler values for the euler values to be set to\n\\return 1 if the operation was successful or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"408:23-408:32|2|2|1","param_spellings":["408:58-408:64"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":24,"usr":6885668920473470859,"detailed_name":"virtual pros::c::imu_accel_s_t pros::Imu::get_accel() const","short_name_offset":42,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\nGet the Inertial Sensor's raw accelerometer values\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return The raw accelerometer values. If the operation failed, all the\nstructure's members are filled with PROS_ERR_F and errno is set.","declarations":[{"spell":"423:33-423:42|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":25,"usr":5505404816198123021,"detailed_name":"virtual pros::c::imu_status_e_t pros::Imu::get_status() const","short_name_offset":43,"short_name_size":10,"kind":6,"storage":1,"hover":"","comments":"\nGet the Inertial Sensor's status\n\nThis function uses the following values of errno when an error state is\nreached:\nENXIO - The given value is not within the range of V5 ports (1-21).\nENODEV - The port cannot be configured as an Inertial Sensor\nEAGAIN - The sensor is still calibrating\n\n\\param  port\n\t\t\t\t The V5 Inertial Sensor port number from 1-21\n\\return The Inertial Sensor's status code, or PROS_ERR if the operation\nfailed, setting errno.","declarations":[{"spell":"438:34-438:44|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":26,"usr":17974443849727194864,"detailed_name":"virtual bool pros::Imu::is_calibrating() const","short_name_offset":24,"short_name_size":14,"kind":6,"storage":1,"hover":"","comments":"\nCheck whether the IMU is calibrating\n\n\\return true if the V5 Inertial Sensor is calibrating or false\nfalse if it is not.","declarations":[{"spell":"445:15-445:29|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":13306417928631923277,"detailed_name":"const std::uint8_t pros::Imu::_port","short_name_offset":30,"short_name_size":5,"hover":"","comments":"","declarations":[],"spell":"26:21-26:26|2|2|2","extent":"26:2-26:26|2|2|0","type":3,"uses":["29:33-29:38|0|3|20"],"kind":8,"storage":0},{"id":1,"usr":11910605978977038423,"detailed_name":"const std::uint8_t port","short_name_offset":19,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"29:25-29:29|0|3|2","extent":"29:6-29:29|0|3|0","type":3,"uses":["29:39-29:43|0|3|12"],"kind":253,"storage":1},{"id":2,"usr":7050468317010387123,"detailed_name":"_PROS_IMU_HPP_","short_name_offset":0,"short_name_size":14,"hover":"#define _PROS_IMU_HPP_","comments":"","declarations":[],"spell":"19:9-19:23|-1|1|2","extent":"19:9-19:23|-1|1|0","uses":[],"kind":255,"storage":0}]}